# IAM permissions require service name to begin with 'integration-tests'
service: integration-tests-js

provider:
  name: aws
  region: sa-east-1
  environment:
    DD_INTEGRATION_TEST: true
    DD_API_KEY: ${env:DD_API_KEY}
  lambdaHashingVersion: 20201221
  timeout: 15
  deploymentBucket:
    name: integration-tests-deployment-bucket
  iam:
    # IAM permissions require that all functions are deployed with this role
    role: "arn:aws:iam::601427279990:role/serverless-integration-test-lambda-role"

layers:
  node:
    package:
      artifact: ../.layers/datadog_lambda_node${env:NODE_VERSION}.zip

functions:
  # async-metrics
  async-metrics_node:
    name: integration-tests-js-${sls:stage}-async-metrics_${env:RUNTIME}
    handler: send-metrics.handle
    runtime: ${env:SERVERLESS_RUNTIME}
    layers:
      - { Ref: NodeLambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  # sync-metrics
  sync-metrics_node:
    name: integration-tests-js-${sls:stage}-sync-metrics_${env:RUNTIME}
    handler: send-metrics.handle
    runtime: ${env:SERVERLESS_RUNTIME}
    layers:
      - { Ref: NodeLambdaLayer }

  # http-requests
  http-requests_node:
    name: integration-tests-js-${sls:stage}-http-requests_${env:RUNTIME}
    handler: http-requests.handle
    runtime: ${env:SERVERLESS_RUNTIME}
    layers:
      - { Ref: NodeLambdaLayer }

  # process-input-traced
  process-input-traced_node:
    name: integration-tests-js-${sls:stage}-process-input-traced_${env:RUNTIME}
    handler: process-input-traced.handle
    runtime: ${env:SERVERLESS_RUNTIME}
    layers:
      - { Ref: NodeLambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  # throw-error-traced
  throw-error-traced_node:
    name: integration-tests-js-${sls:stage}-throw-error-traced_${env:RUNTIME}
    handler: throw-error-traced.handle
    runtime: ${env:SERVERLESS_RUNTIME}
    layers:
      - { Ref: NodeLambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true
