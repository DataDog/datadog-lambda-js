# IAM permissions require service name to begin with 'integration-tests'
service: integration-tests-js

provider:
  name: aws
  region: sa-east-1
  tracing:
    lambda: true
    apiGateway: true
  environment:
    DD_INTEGRATION_TEST: true
    DD_API_KEY: ${env:DD_API_KEY}
  lambdaHashingVersion: 20201221
  timeout: 15
  deploymentBucket:
    name: integration-tests-deployment-bucket
  iam:
    # IAM permissions require that all functions are deployed with this role
    role: "arn:aws:iam::601427279990:role/serverless-integration-test-lambda-role"

layers:
  node10:
    package:
      artifact: ../.layers/datadog_lambda_node10.15.zip
  node12:
    package:
      artifact: ../.layers/datadog_lambda_node12.13.zip
  node14:
    package:
      artifact: ../.layers/datadog_lambda_node14.15.zip

functions:
  # async-metrics
  async-metrics_node10:
    handler: send-metrics.handle
    runtime: nodejs10.x
    layers:
      - { Ref: Node10LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  async-metrics_node12:
    handler: send-metrics.handle
    runtime: nodejs12.x
    layers:
      - { Ref: Node12LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  async-metrics_node14:
    handler: send-metrics.handle
    runtime: nodejs14.x
    layers:
      - { Ref: Node14LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  # sync-metrics
  sync-metrics_node10:
    handler: send-metrics.handle
    runtime: nodejs10.x
    layers:
      - { Ref: Node10LambdaLayer }

  sync-metrics_node12:
    handler: send-metrics.handle
    runtime: nodejs12.x
    layers:
      - { Ref: Node12LambdaLayer }

  sync-metrics_node14:
    handler: send-metrics.handle
    runtime: nodejs14.x
    layers:
      - { Ref: Node14LambdaLayer }

  # http-requests
  http-requests_node10:
    handler: http-requests.handle
    runtime: nodejs10.x
    layers:
      - { Ref: Node10LambdaLayer }

  http-requests_node12:
    handler: http-requests.handle
    runtime: nodejs12.x
    layers:
      - { Ref: Node12LambdaLayer }

  http-requests_node14:
    handler: http-requests.handle
    runtime: nodejs14.x
    layers:
      - { Ref: Node14LambdaLayer }

  # process-input-traced
  process-input-traced_node10:
    handler: process-input-traced.handle
    runtime: nodejs10.x
    layers:
      - { Ref: Node10LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  process-input-traced_node12:
    handler: process-input-traced.handle
    runtime: nodejs12.x
    layers:
      - { Ref: Node12LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  process-input-traced_node14:
    handler: process-input-traced.handle
    runtime: nodejs14.x
    layers:
      - { Ref: Node14LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  # throw-error-traced
  throw-error-traced_node10:
    handler: throw-error-traced.handle
    runtime: nodejs10.x
    layers:
      - { Ref: Node10LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  throw-error-traced_node12:
    handler: throw-error-traced.handle
    runtime: nodejs12.x
    layers:
      - { Ref: Node12LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true

  throw-error-traced_node14:
    handler: throw-error-traced.handle
    runtime: nodejs14.x
    layers:
      - { Ref: Node14LambdaLayer }
    environment:
      DD_FLUSH_TO_LOG: true
